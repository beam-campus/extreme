name: Bless the code

on: 
  push: {}
  pull_request:
      branches:
        - master
        - v1.0.0
env:
  MIX_ENV: test
  ES_TARBALL: "ubuntu/EventStore-OSS-Linux-Ubuntu-18.04-v5.0.10.tar.gz"
  ES_VERSION: 4

jobs:
  graph_conn:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ['1.9.4', '1.10.4', '1.11.4']
        erlang: ['22.3', '23.3']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.erlang }}
    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-deps-${{ matrix.elixir }}-${{ matrix.erlang }}-${{ hashFiles('mix.lock') }}
        restore-keys: ${{ runner.os }}-deps-${{ matrix.elixir }}-${{ matrix.erlang }}-
    - name: Install dependencies
      run: mix deps.get
    - name: Restore builds cache
      uses: actions/cache@v2
      with:
        path: _build/test
        key: ${{ runner.os }}-build_test-${{ matrix.elixir }}-${{ matrix.erlang }}-${{ hashFiles('mix.lock') }}
        restore-keys: ${{ runner.os }}-build_test-${{ matrix.elixir }}-${{ matrix.erlang }}-
    - name: Check warnings
      run: mix compile --warnings-as-errors --force
    - name: Check formatting
      run: mix format --check-formatted
    - name: Prepare EventStore
      run: |
        wget https://raw.githubusercontent.com/EventStore/Downloads/master/${ES_TARBALL}
        tar xzvf EventStore*.tar.gz
        rm EventStore*.tar.gz
        cd EventStore* && ./run-node.sh --run-projections=all --start-standard-projections=true --mem-db 2>&1> eventstore.log &
    - name: Run tests
      run: mix test --cover
